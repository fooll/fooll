extends ./../pug_partials/container-layout.pug

block page-title
  | How to Zinky with MongoDB

block header-title
  div
    img(src="images/mongodb-logo.png")
  |  How to Zinky with MongoDB ?

block content
  br
  br
  section.doc-section
    .section-block
      | Using #[span.ht MongoDB] with #[span.ht Zinky] is very simple and intuitive, so let's see how to do it.
  section.doc-section
    h2.section-title Declaring & Attaching to app
    .section-block
      p We'll start by creating a simple #[span.ht Zinky] server:
      pre
        code.language-javascript
          | const Zinky = require('zinky');
          | var app = new Zinky();
      p Now, we'll create the #[span.ht MongoDB] connection just as we do with other frameworks:
      pre
        code.language-javascript
          | const Zinky = require('zinky');
          | const mongoClient = require('mongodb').MongoClient;
          |
          | var url = 'mongodb://username:password@host:port/dbName';
          | var app = new Zinky();
          |
          | mongoClient.connect(url, function(err, db) {
          |   if (err) throw err;
          |   console.log("Connected successfully to database");
          | });
      p Now, just attach #[span.ht db] to #[span.ht app] and listen: 
      pre
        code.language-javascript
          | const Zinky = require('zinky');
          | const mongoClient = require('mongodb').MongoClient;
          |
          | var url = 'mongodb://username:password@host:port/dbName';
          | var app = new Zinky();
          |
          | mongoClient.connect(url, function(err, db) {
          |   if (err) throw err;
          |   console.log("Connected successfully to database");
          |   app.db = db;
          |   app.listen();
          | });
  section.doc-section
    h2.section-title Use db in modules
    .section-block
      h3 In operations
      p We can access #[span.ht db] object in #[span.ht req]:
      pre
        code.language-javascript
          | const Zinko = require('zinko');
          |
          | class Auth extends Zinko {
          |
          |   async GET_users(req, res) {
          |     var users = await req.app.db.collection('users').find();
          |     res.json(users);
          |   }
          |
          | }
      h3 In non-operation methods
      p In case we want to access #[span.ht db] object in non-action methods, we can find it in #[span.ht this.app]:
      pre
        code.language-javascript
          | const Zinko = require('zinko');
          |
          | class Auth extends Zinko {
          |
          |   async usernameExists(username) {
          |     var user = await this.app.db.collection('users').find({username: username});
          |     return (user) ? true : false;
          |   }
          |
          | }
      p This will lead to an error saying: #[i db is not defined]. To solve this we have to add #[span.ht app.loadModules()] after attaching #[span.ht db] object to app.
      p So the server file (app.js) will look like this:
      pre
        code.language-javascript
          | const Zinky = require('zinky');
          | const mongoClient = require('mongodb').MongoClient;
          |
          | var url = 'mongodb://username:password@host:port/dbName';
          | var app = new Zinky();
          |
          | mongoClient.connect(url, function(err, db) {
          |   if (err) throw err;
          |   console.log("Connected successfully to database");
          |   app.db = db;
          |   app.loadModules();
          |   app.listen();
          | });
      
  section.doc-section
    .section-block
      p Hope this helped you! If you need any help don't hesitate to ask for it here:
        | #[a(href="https://github.com/zinkyJS/zinky/issues") https://github.com/zinkyJS/zinky/issues]
